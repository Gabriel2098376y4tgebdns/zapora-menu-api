apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-uploads-pvc
  namespace: fastapi-menu-api
  labels:
    app: fastapi-menu-api
    component: api
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: "standard"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-menu-api
  namespace: fastapi-menu-api
  labels:
    app: fastapi-menu-api
    component: api
    version: "v1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fastapi-menu-api
  template:
    metadata:
      labels:
        app: fastapi-menu-api
        component: api
        version: "v1"
    spec:
      containers:
      - name: api
        image: fastapi-menu-api:latest  # Change to your registry
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        # From ConfigMap
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DEBUG
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        - name: ALGORITHM
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ALGORITHM
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ACCESS_TOKEN_EXPIRE_MINUTES
        - name: DB_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_POOL_SIZE
        - name: DB_MAX_OVERFLOW
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_MAX_OVERFLOW
        - name: CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CACHE_TTL
        - name: UPLOAD_DIR
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: UPLOAD_DIR
        - name: MAX_FILE_SIZE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MAX_FILE_SIZE
        - name: ALLOWED_EXTENSIONS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ALLOWED_EXTENSIONS
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CORS_ORIGINS
        - name: RATE_LIMIT_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RATE_LIMIT_REQUESTS
        - name: RATE_LIMIT_WINDOW
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RATE_LIMIT_WINDOW
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PROMETHEUS_ENABLED
        # From Secrets
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: SECRET_KEY
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_URL
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: ADMIN_EMAIL
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: ADMIN_PASSWORD
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: api-uploads-pvc
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-menu-api-service
  namespace: fastapi-menu-api
  labels:
    app: fastapi-menu-api
    component: api
spec:
  selector:
    app: fastapi-menu-api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
