[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-menu-api"
version = "1.0.0"
description = "FastAPI Menu Management API with authentication and image upload"
authors = [{name = "Gabriel", email = "gabriel@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "pillow>=10.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "faker>=20.1.0",
    "factory-boy>=3.3.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "coverage[toml]>=7.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "faker>=20.1.0",
    "factory-boy>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastapi-menu-api"
Repository = "https://github.com/yourusername/fastapi-menu-api"
Issues = "https://github.com/yourusername/fastapi-menu-api/issues"

# =================== BLACK CONFIGURATION ===================
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | env
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# =================== COVERAGE CONFIGURATION ===================
[tool.coverage.run]
source = ["my_menu_api"]
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "*/migrations/*",
]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"
title = "FastAPI Menu API Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# =================== MYPY CONFIGURATION ===================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true

# Gradual typing - start lenient and tighten over time
disallow_any_generics = false
disallow_subclassing_any = false
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = [
    "faker.*",
    "factory.*",
    "passlib.*",
    "jose.*",
    "PIL.*",
]
ignore_missing_imports = true

# =================== PYTEST CONFIGURATION ===================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "-ra",
    "--cov=my_menu_api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "auth: Authentication tests",
    "database: Database tests",
    "api: API endpoint tests",
    "image: Image processing tests",
    "audit: Audit logging tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# =================== BANDIT SECURITY CONFIGURATION ===================
[tool.bandit]
exclude_dirs = ["tests", "venv", "env", ".venv", ".env"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_subprocess
severity = "medium"

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
